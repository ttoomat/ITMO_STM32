
lab1_new.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000002e4  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080004a8  080004b0  000104b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080004a8  080004a8  000104b0  2**0
                  CONTENTS
  4 .ARM          00000000  080004a8  080004a8  000104b0  2**0
                  CONTENTS
  5 .preinit_array 00000000  080004a8  080004b0  000104b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080004a8  080004a8  000104a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080004ac  080004ac  000104ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000104b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  20000000  080004b0  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000020  080004b0  00020020  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000104b0  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000100  00000000  00000000  000104e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000000b1  00000000  00000000  000105e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000050  00000000  00000000  00010698  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000038  00000000  00000000  000106e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000fd0  00000000  00000000  00010720  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000004cb  00000000  00000000  000116f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00003eb5  00000000  00000000  00011bbb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00015a70  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000007c  00000000  00000000  00015ac0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000490 	.word	0x08000490

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000490 	.word	0x08000490

08000204 <mode_setup>:

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

void mode_setup() {
 8000204:	b480      	push	{r7}
 8000206:	af00      	add	r7, sp, #0
	// 8 leds
	// moder for pc4 = 01 - output mode
	GPIOC_MODE_R |= (1U << 8);
 8000208:	4b32      	ldr	r3, [pc, #200]	; (80002d4 <mode_setup+0xd0>)
 800020a:	681b      	ldr	r3, [r3, #0]
 800020c:	4a31      	ldr	r2, [pc, #196]	; (80002d4 <mode_setup+0xd0>)
 800020e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000212:	6013      	str	r3, [r2, #0]
	GPIOC_MODE_R &= ~(1U << 9);
 8000214:	4b2f      	ldr	r3, [pc, #188]	; (80002d4 <mode_setup+0xd0>)
 8000216:	681b      	ldr	r3, [r3, #0]
 8000218:	4a2e      	ldr	r2, [pc, #184]	; (80002d4 <mode_setup+0xd0>)
 800021a:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800021e:	6013      	str	r3, [r2, #0]
	// pc5 output
	GPIOC_MODE_R |= (1U << 10);
 8000220:	4b2c      	ldr	r3, [pc, #176]	; (80002d4 <mode_setup+0xd0>)
 8000222:	681b      	ldr	r3, [r3, #0]
 8000224:	4a2b      	ldr	r2, [pc, #172]	; (80002d4 <mode_setup+0xd0>)
 8000226:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800022a:	6013      	str	r3, [r2, #0]
	GPIOC_MODE_R &= ~(1U << 11);
 800022c:	4b29      	ldr	r3, [pc, #164]	; (80002d4 <mode_setup+0xd0>)
 800022e:	681b      	ldr	r3, [r3, #0]
 8000230:	4a28      	ldr	r2, [pc, #160]	; (80002d4 <mode_setup+0xd0>)
 8000232:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8000236:	6013      	str	r3, [r2, #0]
	// pc6 output
	GPIOC_MODE_R |= (1U << 12);
 8000238:	4b26      	ldr	r3, [pc, #152]	; (80002d4 <mode_setup+0xd0>)
 800023a:	681b      	ldr	r3, [r3, #0]
 800023c:	4a25      	ldr	r2, [pc, #148]	; (80002d4 <mode_setup+0xd0>)
 800023e:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000242:	6013      	str	r3, [r2, #0]
	GPIOC_MODE_R &= ~(1U << 13);
 8000244:	4b23      	ldr	r3, [pc, #140]	; (80002d4 <mode_setup+0xd0>)
 8000246:	681b      	ldr	r3, [r3, #0]
 8000248:	4a22      	ldr	r2, [pc, #136]	; (80002d4 <mode_setup+0xd0>)
 800024a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800024e:	6013      	str	r3, [r2, #0]
	// pc7 output
	GPIOC_MODE_R |= (1U << 14);
 8000250:	4b20      	ldr	r3, [pc, #128]	; (80002d4 <mode_setup+0xd0>)
 8000252:	681b      	ldr	r3, [r3, #0]
 8000254:	4a1f      	ldr	r2, [pc, #124]	; (80002d4 <mode_setup+0xd0>)
 8000256:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800025a:	6013      	str	r3, [r2, #0]
	GPIOC_MODE_R &= ~(1U << 15);
 800025c:	4b1d      	ldr	r3, [pc, #116]	; (80002d4 <mode_setup+0xd0>)
 800025e:	681b      	ldr	r3, [r3, #0]
 8000260:	4a1c      	ldr	r2, [pc, #112]	; (80002d4 <mode_setup+0xd0>)
 8000262:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000266:	6013      	str	r3, [r2, #0]
	// pc8 output
	GPIOC_MODE_R |= (1U << 16);
 8000268:	4b1a      	ldr	r3, [pc, #104]	; (80002d4 <mode_setup+0xd0>)
 800026a:	681b      	ldr	r3, [r3, #0]
 800026c:	4a19      	ldr	r2, [pc, #100]	; (80002d4 <mode_setup+0xd0>)
 800026e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000272:	6013      	str	r3, [r2, #0]
	GPIOC_MODE_R &= ~(1U << 17);
 8000274:	4b17      	ldr	r3, [pc, #92]	; (80002d4 <mode_setup+0xd0>)
 8000276:	681b      	ldr	r3, [r3, #0]
 8000278:	4a16      	ldr	r2, [pc, #88]	; (80002d4 <mode_setup+0xd0>)
 800027a:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 800027e:	6013      	str	r3, [r2, #0]
	// pc9 output
	GPIOC_MODE_R |= (1U << 18);
 8000280:	4b14      	ldr	r3, [pc, #80]	; (80002d4 <mode_setup+0xd0>)
 8000282:	681b      	ldr	r3, [r3, #0]
 8000284:	4a13      	ldr	r2, [pc, #76]	; (80002d4 <mode_setup+0xd0>)
 8000286:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800028a:	6013      	str	r3, [r2, #0]
	GPIOC_MODE_R &= ~(1U << 19);
 800028c:	4b11      	ldr	r3, [pc, #68]	; (80002d4 <mode_setup+0xd0>)
 800028e:	681b      	ldr	r3, [r3, #0]
 8000290:	4a10      	ldr	r2, [pc, #64]	; (80002d4 <mode_setup+0xd0>)
 8000292:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 8000296:	6013      	str	r3, [r2, #0]
	// pc10 output
	GPIOC_MODE_R |= (1U << 20);
 8000298:	4b0e      	ldr	r3, [pc, #56]	; (80002d4 <mode_setup+0xd0>)
 800029a:	681b      	ldr	r3, [r3, #0]
 800029c:	4a0d      	ldr	r2, [pc, #52]	; (80002d4 <mode_setup+0xd0>)
 800029e:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80002a2:	6013      	str	r3, [r2, #0]
	GPIOC_MODE_R &= ~(1U << 21);
 80002a4:	4b0b      	ldr	r3, [pc, #44]	; (80002d4 <mode_setup+0xd0>)
 80002a6:	681b      	ldr	r3, [r3, #0]
 80002a8:	4a0a      	ldr	r2, [pc, #40]	; (80002d4 <mode_setup+0xd0>)
 80002aa:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 80002ae:	6013      	str	r3, [r2, #0]
	// pc11 output
	GPIOC_MODE_R |= (1U << 22);
 80002b0:	4b08      	ldr	r3, [pc, #32]	; (80002d4 <mode_setup+0xd0>)
 80002b2:	681b      	ldr	r3, [r3, #0]
 80002b4:	4a07      	ldr	r2, [pc, #28]	; (80002d4 <mode_setup+0xd0>)
 80002b6:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80002ba:	6013      	str	r3, [r2, #0]
	GPIOC_MODE_R &= ~(1U << 23);
 80002bc:	4b05      	ldr	r3, [pc, #20]	; (80002d4 <mode_setup+0xd0>)
 80002be:	681b      	ldr	r3, [r3, #0]
 80002c0:	4a04      	ldr	r2, [pc, #16]	; (80002d4 <mode_setup+0xd0>)
 80002c2:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80002c6:	6013      	str	r3, [r2, #0]

	// button
	// pd2, pc13 - input = 00 - reset state

}
 80002c8:	bf00      	nop
 80002ca:	46bd      	mov	sp, r7
 80002cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002d0:	4770      	bx	lr
 80002d2:	bf00      	nop
 80002d4:	40020800 	.word	0x40020800

080002d8 <main>:
// pd2 - sw - red button
// pc13 - blue button
int cnt = 0;

int main(void)
{
 80002d8:	b580      	push	{r7, lr}
 80002da:	b082      	sub	sp, #8
 80002dc:	af00      	add	r7, sp, #0
	// enable gpioc
	RCC_AHB1_EN_R |= GPIOA_ENABLE_BIT;
 80002de:	4b3f      	ldr	r3, [pc, #252]	; (80003dc <main+0x104>)
 80002e0:	681b      	ldr	r3, [r3, #0]
 80002e2:	4a3e      	ldr	r2, [pc, #248]	; (80003dc <main+0x104>)
 80002e4:	f043 0301 	orr.w	r3, r3, #1
 80002e8:	6013      	str	r3, [r2, #0]
    RCC_AHB1_EN_R |= GPIOC_ENABLE_BIT;
 80002ea:	4b3c      	ldr	r3, [pc, #240]	; (80003dc <main+0x104>)
 80002ec:	681b      	ldr	r3, [r3, #0]
 80002ee:	4a3b      	ldr	r2, [pc, #236]	; (80003dc <main+0x104>)
 80002f0:	f043 0304 	orr.w	r3, r3, #4
 80002f4:	6013      	str	r3, [r2, #0]
    RCC_AHB1_EN_R |= GPIOD_ENABLE_BIT;
 80002f6:	4b39      	ldr	r3, [pc, #228]	; (80003dc <main+0x104>)
 80002f8:	681b      	ldr	r3, [r3, #0]
 80002fa:	4a38      	ldr	r2, [pc, #224]	; (80003dc <main+0x104>)
 80002fc:	f043 0308 	orr.w	r3, r3, #8
 8000300:	6013      	str	r3, [r2, #0]
    mode_setup();
 8000302:	f7ff ff7f 	bl	8000204 <mode_setup>

    /* Loop forever */
	while (1) {
		// if button on pd2:
		    if (!(GPIOD_ID_R & (1U << 2))) {
 8000306:	4b36      	ldr	r3, [pc, #216]	; (80003e0 <main+0x108>)
 8000308:	681b      	ldr	r3, [r3, #0]
 800030a:	f003 0304 	and.w	r3, r3, #4
 800030e:	2b00      	cmp	r3, #0
 8000310:	d10b      	bne.n	800032a <main+0x52>
		        cnt = (cnt + 1) % 8;
 8000312:	4b34      	ldr	r3, [pc, #208]	; (80003e4 <main+0x10c>)
 8000314:	681b      	ldr	r3, [r3, #0]
 8000316:	3301      	adds	r3, #1
 8000318:	425a      	negs	r2, r3
 800031a:	f003 0307 	and.w	r3, r3, #7
 800031e:	f002 0207 	and.w	r2, r2, #7
 8000322:	bf58      	it	pl
 8000324:	4253      	negpl	r3, r2
 8000326:	4a2f      	ldr	r2, [pc, #188]	; (80003e4 <main+0x10c>)
 8000328:	6013      	str	r3, [r2, #0]
		    }
		    if (!(GPIOC_ID_R & (1U << 13))) {
 800032a:	4b2f      	ldr	r3, [pc, #188]	; (80003e8 <main+0x110>)
 800032c:	681b      	ldr	r3, [r3, #0]
 800032e:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8000332:	2b00      	cmp	r3, #0
 8000334:	d10b      	bne.n	800034e <main+0x76>
				cnt = (cnt + 7) % 8;
 8000336:	4b2b      	ldr	r3, [pc, #172]	; (80003e4 <main+0x10c>)
 8000338:	681b      	ldr	r3, [r3, #0]
 800033a:	3307      	adds	r3, #7
 800033c:	425a      	negs	r2, r3
 800033e:	f003 0307 	and.w	r3, r3, #7
 8000342:	f002 0207 	and.w	r2, r2, #7
 8000346:	bf58      	it	pl
 8000348:	4253      	negpl	r3, r2
 800034a:	4a26      	ldr	r2, [pc, #152]	; (80003e4 <main+0x10c>)
 800034c:	6013      	str	r3, [r2, #0]
			}
		    switch (cnt) {
 800034e:	4b25      	ldr	r3, [pc, #148]	; (80003e4 <main+0x10c>)
 8000350:	681b      	ldr	r3, [r3, #0]
 8000352:	2b07      	cmp	r3, #7
 8000354:	d836      	bhi.n	80003c4 <main+0xec>
 8000356:	a201      	add	r2, pc, #4	; (adr r2, 800035c <main+0x84>)
 8000358:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800035c:	0800037d 	.word	0x0800037d
 8000360:	08000385 	.word	0x08000385
 8000364:	0800038d 	.word	0x0800038d
 8000368:	08000395 	.word	0x08000395
 800036c:	0800039d 	.word	0x0800039d
 8000370:	080003a7 	.word	0x080003a7
 8000374:	080003b1 	.word	0x080003b1
 8000378:	080003bb 	.word	0x080003bb
		    case 0: {
				GPIOC_OD_R = (1U << 4);
 800037c:	4b1b      	ldr	r3, [pc, #108]	; (80003ec <main+0x114>)
 800037e:	2210      	movs	r2, #16
 8000380:	601a      	str	r2, [r3, #0]
				break;
 8000382:	e01f      	b.n	80003c4 <main+0xec>
		    }
		    case 1: {
				GPIOC_OD_R = (1U << 5);
 8000384:	4b19      	ldr	r3, [pc, #100]	; (80003ec <main+0x114>)
 8000386:	2220      	movs	r2, #32
 8000388:	601a      	str	r2, [r3, #0]
				break;
 800038a:	e01b      	b.n	80003c4 <main+0xec>
			}
		    case 2: {
				GPIOC_OD_R = (1U << 6);
 800038c:	4b17      	ldr	r3, [pc, #92]	; (80003ec <main+0x114>)
 800038e:	2240      	movs	r2, #64	; 0x40
 8000390:	601a      	str	r2, [r3, #0]
				break;
 8000392:	e017      	b.n	80003c4 <main+0xec>
			}
		    case 3: {
				GPIOC_OD_R = (1U << 7);
 8000394:	4b15      	ldr	r3, [pc, #84]	; (80003ec <main+0x114>)
 8000396:	2280      	movs	r2, #128	; 0x80
 8000398:	601a      	str	r2, [r3, #0]
				break;
 800039a:	e013      	b.n	80003c4 <main+0xec>
			}
		    case 4: {
				GPIOC_OD_R = (1U << 8);
 800039c:	4b13      	ldr	r3, [pc, #76]	; (80003ec <main+0x114>)
 800039e:	f44f 7280 	mov.w	r2, #256	; 0x100
 80003a2:	601a      	str	r2, [r3, #0]
				break;
 80003a4:	e00e      	b.n	80003c4 <main+0xec>
			}
		    case 5: {
				GPIOC_OD_R = (1U << 9);
 80003a6:	4b11      	ldr	r3, [pc, #68]	; (80003ec <main+0x114>)
 80003a8:	f44f 7200 	mov.w	r2, #512	; 0x200
 80003ac:	601a      	str	r2, [r3, #0]
				break;
 80003ae:	e009      	b.n	80003c4 <main+0xec>
			}
		    case 6: {
				GPIOC_OD_R = (1U << 10);
 80003b0:	4b0e      	ldr	r3, [pc, #56]	; (80003ec <main+0x114>)
 80003b2:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80003b6:	601a      	str	r2, [r3, #0]
				break;
 80003b8:	e004      	b.n	80003c4 <main+0xec>
			}
		    case 7: {
				GPIOC_OD_R = (1U << 11);
 80003ba:	4b0c      	ldr	r3, [pc, #48]	; (80003ec <main+0x114>)
 80003bc:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80003c0:	601a      	str	r2, [r3, #0]
				break;
 80003c2:	bf00      	nop
			}
		    }
		    for (long i = 0; i < 200000; i++);
 80003c4:	2300      	movs	r3, #0
 80003c6:	607b      	str	r3, [r7, #4]
 80003c8:	e002      	b.n	80003d0 <main+0xf8>
 80003ca:	687b      	ldr	r3, [r7, #4]
 80003cc:	3301      	adds	r3, #1
 80003ce:	607b      	str	r3, [r7, #4]
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	4a07      	ldr	r2, [pc, #28]	; (80003f0 <main+0x118>)
 80003d4:	4293      	cmp	r3, r2
 80003d6:	ddf8      	ble.n	80003ca <main+0xf2>
		    if (!(GPIOD_ID_R & (1U << 2))) {
 80003d8:	e795      	b.n	8000306 <main+0x2e>
 80003da:	bf00      	nop
 80003dc:	40023830 	.word	0x40023830
 80003e0:	40020c10 	.word	0x40020c10
 80003e4:	2000001c 	.word	0x2000001c
 80003e8:	40020810 	.word	0x40020810
 80003ec:	40020814 	.word	0x40020814
 80003f0:	00030d3f 	.word	0x00030d3f

080003f4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80003f4:	480d      	ldr	r0, [pc, #52]	; (800042c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80003f6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80003f8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80003fc:	480c      	ldr	r0, [pc, #48]	; (8000430 <LoopForever+0x6>)
  ldr r1, =_edata
 80003fe:	490d      	ldr	r1, [pc, #52]	; (8000434 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000400:	4a0d      	ldr	r2, [pc, #52]	; (8000438 <LoopForever+0xe>)
  movs r3, #0
 8000402:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000404:	e002      	b.n	800040c <LoopCopyDataInit>

08000406 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000406:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000408:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800040a:	3304      	adds	r3, #4

0800040c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800040c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800040e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000410:	d3f9      	bcc.n	8000406 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000412:	4a0a      	ldr	r2, [pc, #40]	; (800043c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000414:	4c0a      	ldr	r4, [pc, #40]	; (8000440 <LoopForever+0x16>)
  movs r3, #0
 8000416:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000418:	e001      	b.n	800041e <LoopFillZerobss>

0800041a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800041a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800041c:	3204      	adds	r2, #4

0800041e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800041e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000420:	d3fb      	bcc.n	800041a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000422:	f000 f811 	bl	8000448 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000426:	f7ff ff57 	bl	80002d8 <main>

0800042a <LoopForever>:

LoopForever:
    b LoopForever
 800042a:	e7fe      	b.n	800042a <LoopForever>
  ldr   r0, =_estack
 800042c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000430:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000434:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000438:	080004b0 	.word	0x080004b0
  ldr r2, =_sbss
 800043c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000440:	20000020 	.word	0x20000020

08000444 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000444:	e7fe      	b.n	8000444 <ADC_IRQHandler>
	...

08000448 <__libc_init_array>:
 8000448:	b570      	push	{r4, r5, r6, lr}
 800044a:	4d0d      	ldr	r5, [pc, #52]	; (8000480 <__libc_init_array+0x38>)
 800044c:	4c0d      	ldr	r4, [pc, #52]	; (8000484 <__libc_init_array+0x3c>)
 800044e:	1b64      	subs	r4, r4, r5
 8000450:	10a4      	asrs	r4, r4, #2
 8000452:	2600      	movs	r6, #0
 8000454:	42a6      	cmp	r6, r4
 8000456:	d109      	bne.n	800046c <__libc_init_array+0x24>
 8000458:	4d0b      	ldr	r5, [pc, #44]	; (8000488 <__libc_init_array+0x40>)
 800045a:	4c0c      	ldr	r4, [pc, #48]	; (800048c <__libc_init_array+0x44>)
 800045c:	f000 f818 	bl	8000490 <_init>
 8000460:	1b64      	subs	r4, r4, r5
 8000462:	10a4      	asrs	r4, r4, #2
 8000464:	2600      	movs	r6, #0
 8000466:	42a6      	cmp	r6, r4
 8000468:	d105      	bne.n	8000476 <__libc_init_array+0x2e>
 800046a:	bd70      	pop	{r4, r5, r6, pc}
 800046c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000470:	4798      	blx	r3
 8000472:	3601      	adds	r6, #1
 8000474:	e7ee      	b.n	8000454 <__libc_init_array+0xc>
 8000476:	f855 3b04 	ldr.w	r3, [r5], #4
 800047a:	4798      	blx	r3
 800047c:	3601      	adds	r6, #1
 800047e:	e7f2      	b.n	8000466 <__libc_init_array+0x1e>
 8000480:	080004a8 	.word	0x080004a8
 8000484:	080004a8 	.word	0x080004a8
 8000488:	080004a8 	.word	0x080004a8
 800048c:	080004ac 	.word	0x080004ac

08000490 <_init>:
 8000490:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000492:	bf00      	nop
 8000494:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000496:	bc08      	pop	{r3}
 8000498:	469e      	mov	lr, r3
 800049a:	4770      	bx	lr

0800049c <_fini>:
 800049c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800049e:	bf00      	nop
 80004a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80004a2:	bc08      	pop	{r3}
 80004a4:	469e      	mov	lr, r3
 80004a6:	4770      	bx	lr
